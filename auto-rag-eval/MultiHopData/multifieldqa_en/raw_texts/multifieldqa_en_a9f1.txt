A system and method for generating a stream of content for a channel. The channel application includes a content categorizer, a scoring engine and a channel engine. The content categorizer categorizes new content items received from heterogeneous data sources. The channel engine identifies a channel category for a user based at least in part on at least one of a historical trend and a user activity. The scoring engine queries the new content items based on the channel category and at least one other channel attribute. The scoring engine retrieves candidate content items that include the channel category and the other channel attribute. The scoring engine then generates a stream of content from the candidate content items for the channel.
This application claims priority under 35 USC §120 to U.S. application Ser. No. 13/225,209, entitled, “Generating a Stream of Content for a Channel,” filed on Sep. 2, 2011, and claims priority under 35 USC §119(e) to U.S. Application No. 61/424,636, entitled “Scoring Stream Items with Models Based on User Interests” filed Dec. 18, 2010, the entireties of which are herein incorporated by reference.
The specification relates to a system and method for generating a stream of content for a channel. In particular, the specification relates to generating a stream of content for a channel based on user interests and historical trends.
Many consumers of digital media have two somewhat contradictory goals: keep apprised of information in the areas they already find interesting and discover new content that is also enjoyable. Keeping apprised of information can become burdensome in the digital age because there is so much information. Hence, there is a need to present the best and most relevant information, without overwhelming the consumer. Furthermore, consumers have varied interests depending on the time of a year or a day. As a result, there is also a need to cater to the time dependent changes in the consumer's interests while presenting information. Similarly, discovering new content is difficult when the consumer is overburdened with existing content.
Prior attempts to solve these problems allow consumers to create personalized sections in feed aggregation websites that are defined by keywords. Often, these personalized sections present any item that includes the keywords even though the item is not of interest to the consumer, per se. In another method, consumers are allowed to manually subscribe to Really Simple Syndication (RSS) feeds from multiple websites. This method often leads to the consumer viewing multiple items which contain redundant information.
In some examples, the specification describes a system and method for generating a stream of content for a channel using a channel application. The channel application includes a processing unit, a model generation engine, a scoring engine, a collaborative filtering engine, a content categorizer, a channel engine, and a user interface engine. The model generation engine generates a model that is used to determine suggestions for channels. The content categorizer categorizes new content items received from heterogeneous data sources. The channel engine identifies a channel category for a user based on at least one of a historical trend and a user activity. The historical trend is at least one of an increase in a number of new content items for a content category, an increase in a number of times one of the new content items is accessed and an event. A scoring engine queries the new content items based on the channel category and at least one other channel attribute. The scoring engine receives candidate content items that include the channel category and the at least one other channel attribute. The scoring engine then generates a stream of content from the candidate content items for the channel. The scoring engine transmits the stream of content to the channel engine, which generates a channel.
In one embodiment, the user interface engine generates a user interface for the user to define the channel category and the channel attribute. The scoring engine queries the new content items based on the user defined channel category and channel attribute and then generates the stream of content. In another embodiment, the channel engine enables the user to subscribe to an existing channel.
In one embodiment, the channel engine enables the user to share the channel with at least one of a friend of the user, a community, a group, and an internet user.
The specification is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings in which like reference numerals are used to refer to similar elements.
FIG. 1A is a high-level block diagram illustrating one embodiment of a system for generating a stream of content for a channel.
FIG. 1B is a block diagram illustrating one embodiment of a channel application.
FIG. 2 is a high-level block diagram illustrating another embodiment of a system for generating a stream of content for a channel.
FIG. 3A is a block diagram of one embodiment of the channel engine in more detail.
FIG. 3B is a block diagram of one embodiment of the scoring engine in more detail.
FIG. 4 is a graphic representation of a user interface that displays the stream of content of a channel.
FIG. 5 is a graphic representation of a user interface that allows a user to define or customize a channel.
FIG. 6 is a flow diagram of one embodiment of a method for generating a stream of content for a channel.
FIG. 7 is a flow diagram of another embodiment of a method for generating a stream of content for a channel.
A system and method for generating a stream of content for a channel is described below. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the specification. It will be apparent, however, to one skilled in the art that the embodiments can be practiced without these specific details. In other instances, structures and devices are shown in block diagram form in order to avoid obscuring the specification. For example, the specification is described in one embodiment below with reference to user interfaces and particular hardware. However, the description applies to any type of computing device that can receive data and commands, and any peripheral devices providing services.
Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.
It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as “processing,” “computing,” “calculating,” “determining,” “displaying,” or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.
The specification also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium, such as, but not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, and magnetic disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, flash memories including USB keys with non-volatile memory, or any type of media suitable for storing electronic instructions, each coupled to a computer system bus.
An embodiment can take the form of an entirely hardware embodiment, an entirely software embodiment or an embodiment containing both hardware and software elements. A preferred embodiment is implemented in software, which includes but is not limited to firmware, resident software, microcode, etc.
Furthermore, an embodiment can take the form of a computer program product accessible from a computer-usable or computer-readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description, a computer-usable or computer readable medium can be any apparatus that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device.
FIG. 1A illustrates a block diagram of a system 100 for generating a stream of content for a channel according to one embodiment. The system 100 includes user devices 115 a, 115 n that are accessed by users 125 a, 125 n, a social network server 101, a third party server 107, a ratings server 139, an email server 141, an entertainment server 137, and a search server 135. The ratings server 139 includes websites for rating places, people or objects (e.g. Google Hotpot). The entertainment server 137 includes websites with entertaining information, such as news articles. In FIG. 1A and the remaining figures, a letter after a reference number, such as “115 a” is a reference to the element having that particular reference number. A reference number in the text without a following letter, such as “115,” is a general reference to any or all instances of the element bearing that reference number. In the illustrated embodiment, these entities are communicatively coupled via a network 105.
In one embodiment, the channel application 103 a is operable on the social network server 101, which is coupled to the network via signal line 104. The social network server 101 also contains a social network application 109 and a social graph 179. Although only one social network server 101 is shown, persons of ordinary skill in the art will recognize that multiple social network servers 101 may be present. A social network is any type of social structure where the users are connected by a common feature, for example, Google+. The common feature includes friendship, family, work, an interest, etc. The common features are provided by one or more social networking systems, such as those included in the system 100, including explicitly-defined relationships and relationships implied by social connections with other online users, where the relationships form a social graph 179. In some examples, the social graph 179 reflects a mapping of these users and how they are related.
In another embodiment, the channel application 103 b is stored on a third-party server 107, which is connected to the network via signal line 106. The third-party server 107 includes software for generating a website (not shown). In one embodiment, the notifying application generates a user interface that is incorporated into the website. Although only one third-party server 107 is shown, persons of ordinary skill in the art will recognize that multiple third-party servers 107 may be present.
In yet another embodiment, the channel application 103 c is stored on a user device 115 a, which is connected to the network via signal line 108. The user device 115 a is any computing device that includes a memory and a processor, such as a personal computer, a laptop, a smartphone, a cellular phone, a personal digital assistant (PDA), etc. The user 125 a interacts with the user device 115 a via signal line 110. Although only two user devices 115 a, 115 n are illustrated, persons of ordinary skill in the art will recognize that any number of user devices 115 n are available to any number of users 125 n.
The network 105 is a conventional type, wired or wireless, and may have any number of configurations such as a star configuration, token ring configuration or other configurations known to those skilled in the art. Furthermore, the network 105 may comprise a local area network (LAN), a wide area network (WAN) (e.g., the Internet), and/or any other interconnected data path across which multiple devices may communicate. In yet another embodiment, the network 105 may be a peer-to-peer network. The network 105 may also be coupled to or includes portions of a telecommunications network for sending data in a variety of different communication protocols. In yet another embodiment, the network 105 includes Bluetooth communication networks or a cellular communications network for sending and receiving data such as via short messaging service (SMS), multimedia messaging service (MMS), hypertext transfer protocol (HTTP), direct data connection, WAP, email, etc. While only one network 105 is coupled to the user devices 115 a, 115 n, the social network server 101, and the third party server 107, in practice any number of networks 105 can be connected to the entities.
The channel application 103 receives data for generating a stream of content for a channel from heterogeneous data sources. In one embodiment, the channel application 103 receives data from a third-party server 107, a social network server 101, user devices 115 a, 115 n, a search server 135 that is coupled to the network 105 via signal line 136, an entertainment server 137 that is coupled to the network 105 via signal line 138, a ratings server 139 that is coupled to the network 105 via signal line 140 and an email server 141 that is coupled to the network 105 via signal line 142. In one embodiment, the search server 135 includes a search engine 143 for retrieving results that match search terms from the Internet. In one embodiment, the search engine 143 is powered by Google®. In one embodiment, the channel application 103 generates a model based on the data from the heterogeneous data sources, identifies a channel category based on a user's activities and historical trends, receives candidate content items that include the channel category from heterogeneous data sources, scores the candidate content items by comparing them to the model, and generates a stream of content for the channel.
Referring now to FIG. 1B, the channel application 103 is shown in detail. FIG. 1B is a block diagram of a computing device 200 that includes the channel application 103, a memory 237 and a processor 235. In one embodiment, the computing 200 device is a social network server 101. In another embodiment, the computing device 200 is a third party server 107. In yet another embodiment, the computing device 200 is a user device 115 a.
The processor 235 comprises an arithmetic logic unit, a microprocessor, a general purpose controller, or some other processor array to perform computations and provide electronic display signals to a display device. The processor 235 is coupled to the bus 220 for communication with the other components via signal line 236. Processor 235 processes data signals and may comprise various computing architectures including a complex instruction set computer (CISC) architecture, a reduced instruction set computer (RISC) architecture, or an architecture implementing a combination of instruction sets. Although only a single processor is shown in FIG. 1B, multiple processors may be included. The processing capability may be limited to supporting the display of images and the capture and transmission of images. The processing capability might be enough to perform more complex tasks, including various types of feature extraction and sampling. It will be obvious to one skilled in the art that other processors, operating systems, sensors, displays, and physical configurations are possible.
The memory 237 stores instructions and/or data that may be executed by processor 235. The memory 237 is coupled to the bus 220 for communication with the other components via signal line 238. The instructions and/or data may comprise code for performing any and/or all of the techniques described herein. The memory 237 may be a dynamic random access memory (DRAM) device, a static random access memory (SRAM) device, flash memory, or some other memory device known in the art. In one embodiment, the memory 237 also includes a non-volatile memory or similar permanent storage device and media such as a hard disk drive, a floppy disk drive, a CD-ROM device, a DVD-ROM device, a DVD-RAM device, a DVD-RW device, a flash memory device, or some other mass storage device known in the art for storing information on a more permanent basis.
In one embodiment, the channel application 103 comprises a processing unit 202, a model generation engine 207, a scoring engine 211, a collaborative filtering engine 217, a content categorizer 250, a channel engine 240, and a user interface engine 260 that are coupled to a bus 220.
The processing unit 202 is software including routines for receiving information about a user's interests, activities and social connections and for storing the information in the memory 237. In one embodiment, the processing unit 202 is a set of instructions executable by the processor 235 to provide the functionality described below for processing the information. In another embodiment, the processing unit 202 is stored in the memory 237 of the computing device 200 and is accessible and executable by the processor 235. In either embodiment, the processing unit 202 is adapted for cooperation and communication with the processor 235, the model generation engine 207, and other components of the computing device 200 via signal line 222.
The processing unit 202 obtains information about users from user input and/or prior actions of a user across a range of heterogeneous data sources including search (such as web, video, news, maps, alerts), entertainment (such as news, video, a personalized homepage, blogs, a reader, gadget subscriptions), social activity (such as interactions through email, profile information, text messaging such as short message service (SMS), microblogs, geographical locations, comments on photos, a social graph and other social networking information), and activity on third-party sites (such as websites that provide ratings, reviews and social networks where users indicate that they approve of content). This information is obtained, for example, from a user's search history, browsing history and other interactions with the Internet. The processing unit 202 stores the information with a designation of the source of the information.
In one embodiment, there are multiple processing units 202 that each receive data from a different heterogeneous data source. In another embodiment, the user information is received by the same processing unit 202. The processing unit 202 transmits the user information to memory 237 for storage. In one embodiment, the memory 237 partitions the user information from each heterogeneous data source in a separate data storage location. In another embodiment, the user information from heterogeneous data sources is stored in the same location in the memory 237. In yet another embodiment, the memory 237 partitions the model and the stream of content into separate storage locations as well.
The model generation engine 207 is software including routines for retrieving the user information from the memory 237 and generating a model based on the user information. In one embodiment, the model generation engine 207 is a set of instructions executable by the processor 235 to provide the functionality described below for generating the model. In another embodiment, the model generation engine 207 is stored in the memory 237 of the computing device 200 and is accessible and executable by the processor 235. In either embodiment, the model generation engine 207 is adapted for cooperation and communication with the processor 235, the processing unit 202, the scoring engine 211, the channel engine 240 and other components of the computing device 200 via signal line 224.
The model generation engine 207 receives user information from a variety of sources including, for example, queries, clicks, news clicks, gadgets, email interactions, etc., extracts features from the information and generates a model based on the extracted features. The model determines the relevance of items to users, along with floating point values to indicate the extent to which the relevance holds. Examples include liking a source, a primary location and a list of interests. The interests are generated from explicit information and inferred information. Explicit information is derived, for example, from a user's list of interests on a social network or indicating that they liked a particular content item. Inferred information takes into account a user's activities.
The model generation engine 207 will infer that a user is interested in a particular subject, for example, if the subject matter appears in search terms. For example, the model generation engine 207 infers that a user who searches for information about different types of butterflies is interested in butterflies. The model generation engine 207 can even infer information based on the user's friends' activities. For example, content items that interest the user's friends might also interest the user. As a result, in one embodiment, the model includes the user's friends' interests.
In one embodiment, the model generation engine 207 also generates a model that contains several pieces of global meta-information about the user's consumption patterns including how frequently the user consumes the stream of content of a channel and global statistics on how likely the user is to reshare various types of items. Lastly, the model includes a sequence of weights and multipliers that are used to make predictions about the user's likelihood of clicking on, sharing or otherwise engaging with stream items.
The model generation engine 207 generates the model from the user information across the heterogeneous data sources. In one embodiment, the model generation engine 207 builds extensions to the model that employ the patterns of behavior of other users. For example, the model predicts the user's behavior based on the reaction of similar users. All the data that is derived from other users is anonymized before it is incorporated into the model.
In one embodiment, the model generation engine 207 generates a model based on user information, for example, based on the user's search history or third-party accounts. Alternatively, the model generation engine 207 receives periodic updates (one hour, one day, one week, etc.) from the heterogeneous data sources and in turn updates the model.
In yet another embodiment, the model generation engine 207 generates a model each time it receives a request for generating a stream of content for a channel. The advantage of this method is that the newest updates are included and the model is current. The disadvantage is that generating the model and then comparing the candidate content items to the model to generate the stream of content takes more time than comparing the candidate content items to a pre-existing model. The model generation engine 207 transmits the model to memory 237 for storage.
The content categorizer 250 is software including routines for receiving and categorizing new content items from heterogeneous sources according to at least one category and other features. In one embodiment, the content categorizer 250 is a set of instructions executable by the processor 235 to provide the functionality described below for receiving and categorizing new content items. In another embodiment, the content categorizer 250 is stored in the memory 237 of the computing device 200 and is accessible and executable by the processor 235. In either embodiment, the content categorizer 250 is adapted for cooperation and communication with the processor 235, the scoring engine 211 and other components of the computing device 200 via signal line 227.
The content categorizer 250 receives new content items from heterogeneous data sources and annotates them with specific tags, such as features, global scores, etc. In this embodiment, the heterogeneous data sources include a search engine 143, an entertainment server 137, an email server 141, a ratings server 139, a social network server 101, and a third-party server 107. Once the items are annotated, the content categorizer 250 indexes each new content item based on the features and stores the content items in the memory 237. The new content items, in one embodiment, are indexed according to an identification format (MediaType#UniqueItemID, for example, “YOUTUBE#video_id” and “NEWS#doc_id”), an item static feature column that holds an item's static features (title, content, content classification, context, etc.), an item dynamic feature column that holds an item's dynamic features (global_score, number of clicks, number of following, etc.), a source (src) static feature column where the source is a publisher of an item (magazine in news, video uploading in YouTube, etc.) and a src dynamic feature column that holds the source's dynamic features. The content categorizer 250 categorizes the new content items to make their retrieval more efficient and fast.
The channel engine 240 is software including routines for generating a channel for a user. In one embodiment, the channel engine 240 is a set of instructions executable by the processor 235 to provide the functionality described below for generating a channel for a user. In another embodiment, the channel engine 240 is stored in the memory 237 of the computing device 200 and is accessible and executable by the processor 235. In either embodiment, the channel engine 240 is adapted for cooperation and communication with the processor 235, the scoring engine 211, the model generation engine 207, the user interface engine 240, and other components of the computing device 200 via signal line 230.
In one embodiment, the channel engine 240 identifies a channel category for a user based on historical trends and the user's activities, interests and social connections. The channel engine 240 submits a request for a stream of content that includes the channel category and channel attributes to the scoring engine 211. The channel engine 240 then receives a stream of content from the scoring engine 211 and generates the channel. The generated channel is either public or private depending on the user's settings. The channel engine 240 is explained in greater detail below with regard to FIG. 3A.
The scoring engine 211 is software including routines for generating a stream of content for a channel. In one embodiment, the scoring engine 211 is a set of instructions executable by the processor 235 to provide the functionality described below for globally scoring content items and for generating a stream of content for a channel. In another embodiment, the scoring engine 211 is stored in the memory 237 of the computing device 200 and is accessible and executable by the processor 235. In either embodiment, the scoring engine 211 is adapted for cooperation and communication with the processor 235, the processing unit 202, the collaborative filtering engine 217, the model generation engine 207, the channel engine 240 and other components of the computing device 200 via signal line 228.
In one embodiment, the scoring engine 211 receives the request from the channel engine 240 and queries the new content items stored in memory 237. In another embodiment, the scoring engine 211 directly queries the heterogeneous data sources. The scoring engine 211 receives candidate content items that include the channel category and the channel attributes. The scoring engine 211 then compares the candidate content items to the model to determine whether the user would find the candidate content items interesting.
In one embodiment, the scoring engine 211 first performs the query and then compares the results to the model to determine whether the user would find them interesting. In another embodiment, these steps are performed simultaneously. In yet another embodiment, the scoring engine 211 compares candidate content items to the model and then filters the results according to the subject matter of the queries. The scoring engine 211 is explained in greater detail below with regard to FIG. 3B.
The collaborative filtering engine 217 is software including routines for generating additional candidate content items for the channel through collaborative filtering and transmitting the additional candidate content items to the scoring engine 211 that were derived from collaborative filtering. In one embodiment, the collaborative filtering engine 217 is a set of instructions executable by the processor 235 to provide the functionality described below for generating additional candidate content items for the channel. In another embodiment, the collaborative filtering engine 217 is stored in the memory 237 of the computing device 200 and is accessible and executable by the processor 235. In either embodiment, the collaborative filtering engine 217 is adapted for cooperation and communication with the processor 235, the scoring engine 211 and other components of the computing device via signal line 226.
The collaborative filtering engine 217 obtains additional candidate content items that are socially relevant from a stream of content derived from people with whom the user has a relationship and transmits them to the scoring engine 211. For example, the stream of content is derived from friends in a social network such as the social network application 109 or people that the user frequently emails. The more important that the person appears to be to the user, the more likely that the user will be interested in the candidate content item. Thus, in one embodiment, the collaborative filtering engine 217 applies a weight to candidate content items based on the social relationship of the user to the friend. For example, users that are friends receive higher weights than candidate content items from second generation friends of the user (i.e., a friend of a friend). In one embodiment, the collaborative filtering engine 217 receives information about relationships between users from the social graph 179.
The collaborative filtering engine 217 increases the weights applied to candidate content items from friends when the user positively responds to the items. For example, if the user comments on the item or indicates that the user found the item interesting, the collaborative filtering engine 217 increase the weight so that more candidate content items from the friend become part of the stream of content.
The user interface engine 260 is software including routines for generating a user interface that, when rendered on a browser, displays a channel generated for a user and enables the user to customize the channel. In one embodiment, the user interface engine 260 is a set of instructions executable by the processor 235 to provide the functionality described below for generating a user interface. In another embodiment, the user interface engine 260 is stored in the memory 237 of the computing device 200 and is accessible and executable by the processor 235. In either embodiment, the user interface engine 260 is adapted for cooperation and communication with the processor 235, the channel engine 240 and other components of the computing device 200 via signal line 232.
The user interface engine 260 receives instructions from the channel engine 240 for generating a display. The user interface includes options for viewing a channel, requesting a new channel, modifying the user interests, and following suggested channels.
FIG. 2 is a high-level block diagram illustrating another embodiment of a system for generating a stream of content for a channel. In this embodiment, the components of the channel application 103 are divided among various servers so that the information is efficiently processed. The system includes a search server 135, an entertainment server 137, a ratings server 139, an email server 141, a content categorizer 250, a data storage server 265, a model server 255, a scoring server 262, a social network server 101, a user device 115, and a channel application 103.
A content categorizer 250 crawls the heterogeneous data sources (search server 135, entertainment server 137, ratings server 139, and email server 141) are crawled for new content items by the content categorizer 250 or the new content items are directly transmitted to the content categorizer 250.
The content categorizer 250 categorizes the new content items as mentioned above with regards to FIG. 1B and stores them in the database 267 of the data storage server 265. The content categorizer 240 also includes a processing unit 202 for processing user information (activities, interests and social connections). In one embodiment, the processing unit 202 stores the database 267.
In one embodiment, the data storage server 265 dynamically phases out the old content items. For example, news items expire after 24 hours, videos expire after 48 hours and feeds are kept for 24 hours or only the 10 most recent items, whichever is larger, etc.
The content categorizer 250 also transmits the new content items to the scoring server 262 for a global user ranking. The global scores are transmitted from the scoring server 262 to the data storage server 265, which stores the global scores in association with the new content items. The global scores are helpful for organizing the new content items in the data storage server 265 according to the more popular items.
Turning now to the model server 255, the model server 255 receives the user's activity, interests and social connections from the processing unit 202 or the data storage server 265. The model generation engine 207 generates a model based on user input and/or prior actions. The model server 255 transmits a model to the scoring server 262 and the channel application 103 periodically or upon request.
The channel application 103 includes a channel engine 240 and a user interface engine 260. In one embodiment, the channel engine 240 requests the model from the model server 255 and identifies a channel category that a user would find interesting. The channel engine 240 then transmits a request for a stream of content to the scoring server 262. The channel engine 240 receives the stream of content from the scoring server 262 and generates the channel. The user interface engine 260 generates a user interface for displaying a user interface that includes the channel and transmits it to the user device 115. In addition, the user interface engine 260 generates a user interface to allow the user to customize the channel or define a new channel. These user interfaces are explained in greater detail below with regard to FIGS. 4-5.
In one embodiment, the channel engine 240 transmits a query based on the channel category to the scoring server 262. The scoring server 262 queries and receives candidate content items from the data storage server 265. The scoring server 262 also queries and receives candidate content items from the social network server 101. The candidate content items from the social network server 101 are pre-scored by the collaborative filtering engine 217 and, in one embodiment, the unread candidate content items are saved to a cache on the social network server 101. These items are saved to a cache because the quantity of social updates can be large enough that performing the scoring during write time enables faster reads.
In one embodiment, the scoring engine 211 requests the model from the model server 255. The scoring server 262 then compares the candidate content items to the model and scores the candidate content items. The scoring engine 211 compares the candidate content items received from the social network server 101 to the model and rescores them according to the model. In another embodiment, the scoring engine 211 scores the candidate content items according to the category and any keywords associated with a channel. In either embodiment, the scoring engine 211 generates a stream of content based on the scored candidate content items and transmits the stream of content to the channel application 103.
Referring now to FIG. 3A, one embodiment of a channel engine 240 is shown in more detail. The channel engine 240 includes a historical analyzer 372, a category identifier 374, a subscription module 376 and a channel generator 378 that are each coupled to signal line 230.
The historical analyzer 372 is used to identify when a user will be interested in a particular category. The historical analyzer 372 identifies, for example, a time of the day or a year that a user will be interested in a category by analyzing historical trends associated with the category. In one embodiment, the historical analyzer 372 performs such analyses by measuring the increase or decrease in the number of new content items that are categorized under a content category or by measuring an increase or decrease in the number of times a new content item is accessed. For example, the number of times a tutorial on filing taxes is accessed would be very high during February-April. In another embodiment, the historical analyzer 372 also keeps track of events such as holidays, festivals, etc. Tracking such events is advantageous as, for example, many users might be interested in costume rentals during Halloween or camping during the Memorial Day and July 4th weekends.
The category identifier 374 identifies a channel category for a user based on the user's interests, activities and social connections. In one embodiment, the category identifier 374 requests the model generated by the model generation engine 207 to identify the channel category. For example, the category identifier 374 identifies sports cars as a channel category because it is an explicit interest of the user. The category identifier 374 suggests channels including a source, a category, keywords, a media type, a size of a content item, and a location for a channel. For example, for a user that is interested in foreign politics, especially relations between the United States and China, the category identifier 374 suggests the category of U.S. and Chinese relations (e.g., entity=“us_china_relations”), keywords such as trade and deficit because the user is particularly interested in the economic aspect of the relationship between China and the United States, a source such as The Economist (source=“economist.com”) because the user prefers The Economist over U.S. media outlets and the media being news articles because the user does not enjoy viewing videos.
In one embodiment, the category identifier 374 uses the analyses of the historical analyzer 374 for identifying a channel category for the user. This is advantageous as a user who has searched for US taxes might not be interested in knowing about it throughout the year, but it is beneficial for the user to have a separate channel for US taxes during the tax filing season. In yet another embodiment, the category identifier 374 uses contextual cues of the user for identifying channel categories. For example, the category identifier 374 identifies skiing in Switzerland as a channel category because winter sports is listed as an interest of the user and the user's current IP address is in Switzerland.
The subscription module 376 enables a user to subscribe to existing channels that are public. In one embodiment, the subscription module 376 enables a user to subscribe to a pre-defined channel (such as breaking news, most popular videos, updates from a social group, etc.). The channel application 103 generates the stream of content for pre-defined channels based on global scores of the new content items. Subscribing to pre-defined channels such as breaking news is advantageous as it helps the user to keep apprised of current information and discover new interests. Furthermore, because in one embodiment the breaking news channel is personalized since the content items are compared to a model for the user, the breaking news channel is more relevant than simply a list of popular or recent news items.
In another embodiment, the subscription module 376 enables a user to subscribe to another user's channel (a friend, a famous person, etc.) that is public. Subscribing to another user's channel is advantageous because, for example, a user who is interested in the stock market will benefit by viewing the stream of content that is viewed by a famous stock market analyst. In yet another embodiment, the subscription module 376 enables the user to search for channels that are public using the search engine 143. The subscription module 376, suggests such channels that are viewed by other users based on the interests of the user. In another embodiment, the subscription module 376 communicates with the collaborative filtering engine 217 to suggest channels viewed by other users with whom the user has a relationship.
The channel generator 378 submits a request for a stream of content for a channel to the scoring engine 211. The request includes the channel category identified by the category identifier 374 and channel attributes. The channel attributes include any attribute known to a person with ordinary skill in the art such as a source, presence of keywords, absence of keywords, a media type, a location, a time, a size of a content item, a date, etc. In one embodiment, the channel category and the channel attributes are defined by the user. In another embodiment, channel generator 378 defines the channel attributes for the channel category based on the user's preferences and activities. For example, if a user always reads news articles and seldom watches news videos, the channel generator 378 would define the media type for the channel as text based articles. At any point in time, the user can customize both the channel category and the channel attributes. The channel generator 378 then resubmits the request based on the changes made by the user.
In response to the request, the channel generator 378 receives a stream of content from the scoring engine 211 and generates the channel for the user. The generated channel is either public or private depending upon the user's preferences. In one embodiment, the user shares the channel to a community, a group of people or any internet user. The channel is then displayed to the user with an interface generated by the user interface engine 260.
Referring now to FIG. 3B, one embodiment of a scoring engine 211 is shown in more detail. The scoring engine 211 includes a query generator 301, a global scorer 302 and a content stream generator 304 that are each coupled to signal line 228.
The global scorer 302 is used to rank new content items that are stored in the data storage server 265 or memory 237 (depending upon the embodiment). The global scorer 302 uses signals from the different verticals to compute a global user-independent score for each item to approximate its popularity or importance within the stream that produced it. The global scorer 302 normalizes the score across streams so that items from various streams are comparable to aid in generating a quick yet reasonable ranking of items. The global score is a combination of its quality specific to the source stream (depending on the rank of the source, number of known followers of a source, etc.) and its global popularity (trigger rate on universal search, relevance to trending queries, number of clicks, long clicks received, etc.).
The global scorer 302 transmits the global score to storage where it is associated with the item. The global score helps rank the items for faster retrieval. For example, if the query generated by the query generator 301 includes a request for the top ten items about skiing, those items are already organized in the data storage server 265 or memory 237 according to the global score.
The query generator 301 receives a request for a stream of content for a channel from the channel engine 240. The query generator 301 generates a query based on the channel attributes that are included in the request. The query generator 301 queries the data storage server 265 or memory 237 depending upon the embodiment. The following is an example query generated by the query generator 301: ((Category: Politics) AND (global_score>80) AND (source: NewsWebsite) AND (media type: Text)).
The content stream generator 304 receives candidate content items that include the channel attributes. The content stream generator 304, for the above mentioned query, receives text based articles that include the channel category politics and have a global score greater than 80. Additionally, the text based articles are from the source NewsWebsite. In one embodiment, the content stream generator 304 generates the stream by ordering the content items in order of their scores. In another embodiment, the content stream generator 304 determines an interestingness of each candidate content item to the user. The content stream generator 304 determines the interestingness by comparing the candidate content items with a model generated for the user by the model generation engine 207 and scoring them.
where p is a property, that is, a setting A=a of the attributes. The latter quantity, Pr(p|user) is approximated from the user's history of interactions with content items as well as the user's search history and other opt-in data. Similarly, the former quantity, Pr(item|p) is approximated by the (suitably weighted) reciprocal of the number of items with property p (e.g., if it is expected that p=((Politics) AND (global_score>80) AND (source: NewsWebsite) AND (media type: Text)) to generate 300 items, take Pr(item|p) to be 1/300).
where the properties p are summed over single-attribute properties (as opposed to all possible settings of an entire collection of attributes), and G is an exponential function of the form G(x)=2(100 x), so that when applied in this form, if there are several values of p for which Pr(item|p) Pr(p|user) is large, the sum of their G-values slowly increases.
Once the scores are calculated, the content stream generator 304 generates a stream of content for the channel that is ordered according to the candidate content item scores. In one embodiment, only the candidate content items that exceed a certain threshold are included in the stream of content for the channel.
Turning now to the user interface engine 260, FIG. 4 is a graphic representation 400 of a user interface generated by the user interface engine 260 for displaying the stream of content of a channel. In this example, the user interface 400 also includes channels 405 that are pre-defined, channels 410 that are suggested for the user and channels 415 that are subscribed to by the user. The user can also define new channels and attributes by clicking the link 420.
The example includes the stream of content for the user's soccer channel 425. The stream of content includes news items 445, videos 450 and social network news feeds 455 from the content sources 440 defined by the user. The candidate content items are listed in decreasing order of their scores. The user interface engine 260 lists five candidate content items with the highest scores in the hot items section 430. The remaining candidate content items are listed in the other items section 435. In another embodiment, the entire stream of content is listed in a single section.
FIG. 5 is a graphic representation 500 of a user interface that is generated by the user interface engine 260 for a user to define a new channel or customize an existing channel. In this example, the user interface includes all the channel categories 505 that have been either pre-defined, suggested to the user, or subscribed by the user, and the content sources 510 for each channel category. The user customizes a channel by adding or removing content sources for the channel. In one embodiment, the user edits more advanced channel attributes such as media type, size of the content items, etc. by clicking on the link 515. The user makes the channel public, private or restricts it to a group of people by clicking on link 520. Additionally, the user can also define a new channel by adding a new channel category.
Referring now to FIGS. 6-7, various embodiments of the method of the specification will be described. FIG. 6 is a flow diagram 600 of one embodiment of a method for generating a stream of content for a channel. The channel engine 240 defines 602 a channel category and submits a request for a stream of content. The request includes channel attributes including any of a category, a source, keywords, a media type, a location, a size of a content item, and a date. The channel category is defined based on a model for a user that is generated by the model generation engine 207 or the channel is defined by a user. The scoring engine 211 receives 604 the request including the channel category and generates 606 a stream of content based on the channel category. The channel engine 240 generates 608 a channel with the stream of content and transmits it to the user.
FIG. 7 is a flow diagram 700 of another embodiment of a method for generating a stream of content for a channel. The content categorizer 250 categorizes 702 new content items that are received from heterogeneous data sources. The new content items that are received from heterogeneous data sources include, for example, news articles, microblogs, blogs, videos, photos, etc. The content categorizer 250 categorizes the content according to a category and other features. The content categorizer 250 also stores 704 the new content items in a data storage server 265 or a memory 237, depending upon the embodiment. The global scorer 302 generates 706 a global score for each new content item. The category identifier 374 identifies 708 a channel category for a user based on the user's activities and a historical trend identified by the historical analyzer 372. The user's activity includes a search (such as web, video, news, maps, alerts), entertainment (such as news, video, a personalized homepage, blogs, a reader, gadget subscriptions), social activity (such as interactions through email, profile information, text messaging such as short message service (SMS), microblog, comments on photos, a social graph, and other social networking information), and activity on third-party sites (such as websites that provide ratings, reviews and social networks where users indicate that they approve of content) In one embodiment, the category identifier 374 also uses contextual information of the user to identify the channel category.
The query generator 301 generates a query based on the channel category and the channel attributes and queries 710 the new content items stored on the data storage server 265. The content stream generator 304 receives 712 candidate content items that include the channel category and channel attributes. In one embodiment, the content stream generator 304 receives additional candidate content items from the collaborative filtering engine 217.
The content stream generator 304 scores 714 each candidate content item by comparing it to a model generated by the model generation engine 207. The score is calculated by determining an interestingness of the candidate content item to the user. The content stream generator 304 then generates 716 the stream of content based on the scores for each candidate content item. The channel engine 240 then generates 718 a channel with the stream of content and transmits it to the user.
The foregoing description of the embodiments has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the specification to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the embodiments be limited not by this detailed description, but rather by the claims of this application. As will be understood by those familiar with the art, the examples may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise, the particular naming and division of the modules, routines, features, attributes, methodologies, and other aspects are not mandatory or significant, and the mechanisms that implement the description or its features may have different names, divisions and/or formats. Furthermore, as will be apparent to one of ordinary skill in the relevant art, the modules, routines, features, attributes, methodologies, and other aspects of the specification can be implemented as software, hardware, firmware, or any combination of the three. Also, wherever a component, an example of which is a module, of the specification is implemented as software, the component can be implemented as a standalone program, as part of a larger program, as a plurality of separate programs, as a statically or dynamically linked library, as a kernel loadable module, as a device driver, and/or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming. Additionally, the specification is in no way limited to implementation in any specific programming language, or for any specific operating system or environment. Accordingly, the disclosure is intended to be illustrative, but not limiting, of the scope of the specification, which is set forth in the following claims.
providing, with the one or more processors, the customized stream of content.
2. The computer-implemented method of claim 1 comprising removing pre-existing content items included in the customized stream of content for the channel.
3. The computer-implemented method of claim 1 wherein the historical trend is one of an increase in a number of the new content items for a content category and an increase in a number of times one of the new content items is accessed.
categorizing the new content items.
5. The computer-implemented method of claim 3 wherein the heterogeneous data sources include at least two from the group of a news article post, a news feed, a social feed, a blog post, a micro-blog post, a photo, a video, an audio, an email message, and a text based message.
6. The computer-implemented method of claim 1 comprising receiving a request from the user to subscribe to an existing channel.
7. The computer-implemented method of claim 1 wherein the channel category is also based on an interest of the user and a connection of the user.
8. The computer-implemented method of claim 1 wherein the user activity is an interaction of the user with an application, wherein the interaction of the user with the application includes providing at least one of a user preference, a user interest, a comment, a tag, and a search.
provide the customized stream of content.
10. The computer program product of claim 9, wherein the computer readable program when executed on the computer also causes the computer to remove pre-existing content items included in the customized stream of content for the channel.
11. The computer program product of claim 9, wherein the historical trend is one of an increase in a number of the new content items for a content category and an increase in a number of times one of the new content items is accessed.
categorize the new content items.
13. The computer program product of claim 12, wherein the heterogeneous data sources include at least two from the group of a news article post, a news feed, a social feed, a blog post, a micro-blog post, a photo, a video, an audio, an email message, and a text based message.
14. The computer program product of claim 9, wherein the computer readable program when executed on the computer also causes the computer to receive a request from the user to subscribe to an existing channel.
15. The computer program product of claim 9, wherein the channel category is also based on an interest of the user and a connection of the user.
16. The computer program product of claim 9, wherein the user activity is an interaction of the user with an application, wherein the interaction of the user with the application includes providing at least one of a user preference, a user interest, a comment, a tag, and a search.
18. The system of claim 17 wherein the system is further configured to remove pre-existing content items included in the customized stream of content for the channel.
19. The system of claim 17 wherein the historical trend is one of an increase in a number of the new content items for a content category and an increase in a number of times one of the new content items is accessed.
21. The system of claim 20 wherein the heterogeneous data sources include at least two from the group of a news article post, a news feed, a social feed, a blog post, a micro-blog post, a photo, a video, an audio, an email message, and a text based message.
22. The system of claim 17 wherein the system is further configured to receive a request from the user to subscribe to an existing channel.
23. The system of claim 17 wherein the channel category is also based on an interest of the user and a connection of the user.
24. The system of claim 17 wherein the user activity is an interaction of the user with an application, wherein the interaction of the user with the application includes providing at least one of a user preference, a user interest, a comment, a tag, and a search.
Adamic et al., "Search in power-law networks," Physical Review E, 2001, vol. 64, HP Labs/Stanford University, The American Physical Society.
Boyd, et al., "Social Network Sites: Definition, History, and Scholarship," Journal of Computer-Mediated Communication, International Communication Association, 2008, pp. 210-230. 8.
MediaSift Ltd., DataSift: Realtime Social Data Mining Platform, Curate and Data Mine the Real Time Web with DataSift, Dedipower, Managed Hosting, May 13, 2011, 1 pg.
Ring Central, Inc., Internet, retrieved at http://www.ringcentral.com, Apr. 19, 2007, 1 pg. 28.
Singh et al., "CINEMA: Columbia InterNet Extensible Multimedia Architecture," Department of Computer Science, Columbia University, May 2002 pp. 1-83.
Yu et al., "It Takes Variety to Make a World: Diversification in Recommender Systems," 2009, pp. 1-11, downloaded from https://openproceedings.org/2009/conf/edbt/YuLA09.pdf.