Paper Info

Title: Incorporating Human Path Preferences in Robot Navigation with Minimal Interventions
Publish Date: 16 Mar 2023
Author List: Oriana Peltzer, Dylan Asmar, Mac Schwager, Mykel Kochenderfer

Figure

Hyperplane arrangement of a twodimensional space containing two obstacles (colored in gray).The robot is located inside the pink polytope, surrounded by three adjacent obstacle-free polytopes.Each hyperplane on the boundary of the robot's polytope corresponds to one of the nonredundant constraints in eq.(4).(b)Graph derived from the hyperplane arrangement.The nodes on the graph designate polytopes, and edges designate transitions to adjacent polytopes.To estimate the human's preference, the robot updates a posterior over the goal and over which of the graph transitions φ 1 , φ 2 and φ 3 is preferred by the human.(c)Example preference defined over the graph.The location of the goal is indicated in yellow in the lower right polytope.For each node, the outgoing pink arrow designates the edge on the graph corresponding to the preferred transition between polytopes.
Simple, 10 × 10, 8 polytopes.(b) Map 2: Office, 10 × 10, 56 polytopes.(c) Map 3: Classroom, 20 × 20, 73 polytopes.(d) Sampled observations and robot's executed trajectories.
Fig.5: Maps used for simulating the robot navigation problem with path preferences.In (d), the heading angles observed are indicated with arrows.The goal is indicated with a pink circle, and the orange robot corresponds to the starting location.The blue robot follows a policy that accounts for path preference, while the green robot does not.The opacity of the robots increases with time.
Map 1 problem setup and example realizations for goal-only (green) and path preference (blue) solution methods.The robot starts at the lower left corner of the environment, and the goal of the task (pink circle) is in the upper left area.The robot does not know which goal, among 10 options (shown in light blue squares), is the correct goal.The human provides noisy observations, indicated by arrows, at each iteration.The green robot selects actions according to the goal-only baseline, and the blue robot uses our proposed method to infer path preferences.The polytopes composing G are drawn in blue.Probability of correct goal.WLPHVWHS +J (c) Entropy of goal distribution g.
Fig. 6: Probability of the correct goal, fig.6b, and entropy of the goal belief distribution P (g), fig.6c, for the same problem setup, fig.6a.In this problem instance, the human's preference is to go to the goal by passing on the right side of the obstacle.Results are averaged over 50 runs and the area filled represents one standard deviation above and below the mean value.The goal-only baseline shows an over-confident prediction (shown by the strong reduction in belief entropy) that the correct goal is less likely, making it more difficult to reach the correct goal compared to a method that accounts for path preference.
Success rates in the simple environment (Map 1).The results are averaged over 6 randomly sampled problem instances (start location, goal location, and goal possibilities), and over 50 runs per problem instance.∆T is the number of time steps separating two consecutive human inputs.The robot's mission time is Tmax = 30 time steps.We selected γ h = 1.5, corresponding to relatively noisy human inputs and making the problem more difficult to solve for the robot.
Computation times for Goal Only and Path Preference methods on Map 1 (fig.5a),Map 2 (fig.5b), and Map 3 (fig.5c),averaged over 100 runs with randomly sampled problem instances.The 95 % confidence interval is provided with the mean.We evaluate computation time at the first iteration of each run (where the search depth takes on its highest value Tmax).

abstract

Robots that can effectively understand human intentions from actions are crucial for successful human-robot collaboration. In this work, we address the challenge of a robot navigating towards an unknown goal while also accounting for a human's preference for a particular path in the presence of obstacles.
This problem is particularly challenging when both the goal and path preference are unknown a priori. To overcome this challenge, we propose a method for encoding and inferring path preference online using a partitioning of the space into polytopes. Our approach enables joint inference over the goal and path preference using a stochastic observation model for the human.
We evaluate our method on an unknown-goal navigation problem with sparse human interventions, and find that it outperforms baseline approaches as the human's inputs become increasingly sparse. We find that the time required to update the robot's belief does not increase with the complexity of the environment, which makes our method suitable for online applications.

INTRODUCTION

Collaboration between humans and robots has become increasingly important and one key aspect of this collaboration is the ability for robots to adapt to human decisions. In many scenarios, such as a robot navigating through a busy room to deliver an item, it is important for the robot to take into account human preferences.
For instance, humans may prefer a specific path that would allow their colleagues to notice the item being delivered, but this preference may change dynamically based on various factors such as changes in the environment or unforeseen circumstances. While some preferences can be incorporated into the path-planning process, accommodating dynamic user preferences in real-time remains challenging.
In this paper, we propose a way to enable robots to adapt to human preferences dynamically by leveraging real-time feedback to inform decision-making. In this work, we tackle the problem of robot navigation in which the robot cannot observe the goal or the preferred path to the goal, but must make navigation decisions that are influenced by humans through recommended actions.
Prior work has explored how to adapt to a human's preference through feedback, but such approaches often require a high level of intervention, which can be time-consuming and impractical in real-world scenarios. To optimize the use of human input and quickly infer the human's preference, Fig. : An autonomous robot navigates in a simulated classroom towards a goal location (pink circle).
At the start of its mission, it receives direction indications (arrows) from a human that indicate which path it should take to get to the goal. In this scenario, the human wants the robot to go around the desks on the right side of the classroom. A robot that does not reason over path preferences (green) will take the shortest path to the goal regardless of the human's input.
Our method (blue) infers the human's path preference from these indications and adapts to their recommendations. we propose an approach that leverages probabilistic representations of human preference and incorporates real-time feedback. Previous research by Bajcsy et al. considered an online adaptation problem in a manipulation task, where the person can apply forces to the robot to indicate their preferences.
By allowing the robot to continue its task while taking into account a probabilistic representation of human preference, their approach does not require frequent inputs. Building on this idea, we adopt a similar approach to adapt to a human's preference in the context of a robot autonomously navigating through a known environment, such as a cluttered office space.
Specifically, we focus on allowing the human to influence the robot's trajectory with respect to obstacles, by providing guidance on preferred routes or paths, while the robot continues to execute its task. Paths can be represented using homotopy classes . However, homotopies can pose computational challenges when used to encode and infer human preferences.
When the robot maintains a belief over homotopy classes, the inference problem can become exponentially complex with the number of obstacles in the space. Additionally, when the goal is unknown, the number of variables increases with the number of candidate destinations. This complexity can render the decision-making problem intractable.
Our solution is to encode path preference based on a partitioning of the environment into polytopes . This representation allows path preferences to be expressed as sets of preferred transitions between adjacent polytopes. Paths belonging to different homotopy classes correspond to different sequences of transitions.
By leveraging conditional independence assumptions, we can make the Bayesian inference problem tractable. These assumptions exploit the fact that human actions provide information about the path in a piece-wise manner. For example, indicating a preference for navigating around a particular obstacle only provides information about the local area and not the entire path.
Finally, after updating its belief representation over the human's preference, the robot can adapt to indications by replanning online. Our contributions are as follows. • We formulate the human-robot collaboration problem as a Partially Observable Markov Decision Process (POMDP) where both the goal of the task and the human's path preference are unknown random variables.
• We propose an encoding of a human's path preference using a partitioning of the environment into polytopes, along with conditional independence assumptions that make the Bayesian inference problem tractable to infer the task goal and path preference online. • Through simulations in two environments of different sizes and complexity, we show that our method is effective for solving problems where the robot must reach a goal that is unknown a-priori while simultaneously adapting to a human's indications.
Our method shows higher success rates compared to baseline approaches when the human inputs are sparse. Our approach enables a robot to make effective navigation decisions in collaboration with a human, even when the goal and path preference are not known in advance, and with minimal human input. In recent years, there has been a growing interest in shared autonomy and interactive systems, where humans and robots work together to accomplish tasks.
Several approaches have been proposed to address the challenge of enabling effective collaboration between human and robot agents while still achieving high task performance. Losey et al. and Jeon, Losey, and Sadigh propose a framework where a human operator is given control of a task-relevant latent action space while an autonomous system handles the rest.
Dragan and Srinivasa present a formalism for arbitrating between a user's input and a robot's policy when both human and robot share control of the same action space. Cognetti et al. [7] provide a method for real-time modifications of a path, . . . Fig. : We model the intent inference problem with the above diagram.
At each step in time, the robot receives an observation ot from the human conditioned on its current location st, the intended goal g, and the human's path preference θ. The robot updates its belief over g and θ and transitions to a next location st+1. while Hagenow et al. present a method that allows an outside agent to modify key robot state variables and blends the changes with the original control.
However, a common challenge of these approaches is the high level of intervention required from humans. Best and Fitch propose a method for predicting an agent's intended trajectory from observations. Rather than maintaining a belief over the agent's future path, they infer the agent's intended goal among a set of candidate locations at the boundary of the space.
This approach provides information on where the agent is heading and generates a distribution of candidate future trajectories for the agent. Inferring the goal of the task among a discrete set of candidates is also relevant to the area of shared autonomy. Javdani, Srinivasa, and Bagnell propose a formalism for shared control of a robotic arm, where the robot must assist the human in picking up an object but needs to infer which object the human has chosen from joystick inputs.
Planning with homotopy class constraints is useful in problems where the robot's requirements are given with respect to obstacles, and Yi, Goodrich, and Seppi consider topological constraints provided by human operators. Bhattacharya propose an efficient algorithm for solving pathplanning problems under homotopic constraints.
However, the number of homotopy classes for a given problem can be infinite, and as the robot changes location and updates its representation of the world, carrying out inference over homotopy classes in a dynamic environment requires recomputing the set of homotopies at every iteration, making the belief update challenging.
Prior work has addressed the challenge of shared autonomy by considering how robots can infer a human's intended goal, or how they can infer the preferred path to a goal. However, we argue that inferring the goal and the path as separate problems can lead to over-confidence in incorrect beliefs about the user's preferences.
To illustrate this point, consider the following scenario: a robot and a human are collaborating to move an object from one end of a room to Fig. : Using the hyperplanes composing the H-representation of each obstacle, we construct a hyperplane arrangement of the obstacle-free space (a). We define the human's preference for the robot's one step action choices as the posterior distribution (given all human input up to that point) over transitions from the current to the neighboring polytopes, i.e. edges on the graph.
Each time the robot transitions to a new polytope, the set of neighbor polytopes and the distribution over human preferences are updated. another, but there is an obstacle in the way. The human would like the robot to take a path around the obstacle on the left, even though the goal is on the right. If the robot only infers the goal from the human's inputs, it may incorrectly assume that the goal is on the right, and become over-confident in this belief.
On the other hand, if the robot only infers the preferred path, it may mistakenly assume that the goal is on the left, leading to a failure in completing the task. To overcome these challenges, our work proposes a joint inference approach that considers both the human's intended goal and their preferred path to that goal.
Specifically, we model the human's preference over different homotopy classes and leverage a conditional independence assumption to provide a tractable solution. In our approach, we assume that the human's inputs are noisily rational conditioned on both the goal and the preference. By jointly inferring the goal and path preference, we can avoid over-confidence in incorrect beliefs about the user's preferences, leading to improved system performance.
We consider the problem of robot navigation in a known environment to an unknown destination, where a human can intervene and provide a heading direction to the robot using a joystick or force cues. The human also has a preference on which path the robot should take with respect to obstacles, and our objective is for the robot to understand the human's intentions and execute the task with minimal interventions.
Let g be a discrete random variable denoting the goal of the task, belonging to a set of candidates Ω g , and let θ be a discrete-valued random variable representing the human's path preference, belonging to a set of possible preferences Θ. The physical location of the robot at time index t is denoted by s t ∈ R 2 , and the robot's action at time index t, belonging to some action space A, is denoted by a t .
The transition model T (s t+1 | s t , a t ) is deterministic, meaning the robot has full control over its future location. At any time step, the human may provide an observation to the robot. When the human intervenes, the robot receives a direction (heading angle) that can be mapped to a future location in space.
More specifically, we map the direction to an intended location, which is the resulting robot location after advancing in the indicated direction for one time step. For simplicity, we consider that the robot directly makes an observation o t of the location indicated by the human. We assume that the robot has a stochastic observation model for the human P (o t | s t , g, θ) that is conditioned on both the goal of the task g and the human's preferred path θ.
We further assume that having chosen a goal and path preference, the human takes actions to noisily minimize a cost function C g,θ that measures the cost of moving from the robot's current location to the goal along the preferred path. For example, C g,θ (s t , o t ) can be the length of the shortest path from location s t to the goal g after taking a first step to o t , and constrained by path preference θ.
We use C g,θ to induce a probability distribution over observations, given by: where γ h is a hyperparameter that designates the rationality coefficient. This model assumes the human will pick the lowest cost action with the highest probability and the likelihood of an action decreases exponentially with the increase in cost .
Our inclusion of the path preference θ sets our approach apart from . The model is shown in fig. represented as a Bayesian Network.

Inference

At each time step where the human provides an observation, the posterior P (g, θ) is given through the Bayesian update We note that the number of Bayesian updates required at each iteration to update the belief is equal to the cardinality of Ω g × Θ. In addition, each Bayesian update involves computing C g,θ ( .
, . ) in eq. ( ), which involves solving an optimization problem (such as a shortest path problem). In section IV, we propose a specific encoding of preference θ for resolving eq. ( ), while ensuring the number of computations of the cost C g,θ (., .) per update does not grow exponentially with the number of obstacles.

Decision Making

We consider a navigation problem where the robot receives reward according to the model R(s t , g, θ, a t ). We wish to find the optimal policy π that maximizes the expected discounted sum of future rewards, with discount factor γ. The above problem is a Partially Observable Markov Decision Process (POMDP) .
In this section, we propose an encoding of human's path preference θ for computing the posterior in eq. ( ). Devifrom the concept of homotopy classes, we define the preference according to a partitioning of the environment into polytopes, as shown in fig. , creating a hyperplane arrangement of the space.
Hyperplane arrangements have been used by Vincent and Schwager in the context of Neural Network verification. In our setting, we leverage this representation to define path preferences as preferred transitions between adjacent regions of the space.

Hyperplane Arrangement

We assume a two-dimensional environment composed of m polytopic obstacles, each defined by their half-space representation (H-representation) where A i ∈ R di×2 and b i ∈ R di , and where d i is the number of edges (hyperplanes) composing polytope i. Let n = i d i be the total number of hyperplanes. We leverage each obstacle's H-representation to construct a hyperplane arrangement of the environment as shown in fig.
.e. a partitioning of the space into polytopes. More specifically, each location in space belongs to a polytope j for which we can write an H-representation of the form where α j i ∈ {−1, 1} di is a vector specific to polytope j and obstacle i corresponding to the relative position of any point in the set with respect to each hyperplane in O i .
Fig. : Intent inference model in a hyperplane arrangement of the obstacle free space. We spatially decompose the preference θ into a set of preferred neighboring polytopes per region of the space. Within each polytope j, the human preference pj is a discrete distribution over the preferred neighbor in N (j).
We assume that for a location st belonging to polytope j, and given goal g and preference pj, the observation ot and any other preference p i,i =j are conditionally independent. Concatenating elements from each obstacle's Hrepresentation, we can write polytope j's H-representation as where Some of the constraints in eq. ( ) (corresponding to rows of A, b and α j ) are redundant, i.e. the set P j does not change upon their removal.
We can further reduce the Hrepresentation of a polytope to include only non-redundant constraints. By removing the rows corresponding to redundant constraints, we obtain new matrices A j e , b j e and α j e such that we can write the polytope's reduced H-representation as The non-redundant constraints correspond to edges of the polytope.
In other words, as the robot continually moves in space, the first hyperplane that it will cross upon exiting the polytope will correspond to one of the polytope's nonredundant constraints. Vincent and Schwager outline an iterative method for removing redundant constraints by solving n linear programs.
We use this method in practice for computing α j e for each polytope. We can now characterize each polytope by a vector α j e ∈ {−1, 1} n j e , where n j e ≤ n is the number of essential constraints of the polytope. The polytopes P j partition the environment into a hyperplane arrangement.

Path Preference

In this section, we provide a definition of preference θ according to a graphical representation of the environment based on the hyperplane arrangement. Under this representation, a path preference corresponds to a set of preferred transitions. In other words, for each polytope in the space, the human will have a preference to which neighboring polytope they wish to transition.
Let G := (V, E) be an undirected graph, where vertices are obstacle-free polytopes, and edges connect two adjacent polytopes. Each polytope is described by a unique vector α j as defined in eq. ( ). Two polytopes are adjacent if they share non-redundant constraints (rows in eq. ( )) corresponding to the same hyperplane (i.e. they are on opposite sides of the hyperplane).
Let N (v) be the set of neighbors of a vertex v. For each vertex, we denote p v the discrete-valued random variable describing which edge in N (v) the human intends to transition to. Using this formalism, we define a path preference as the set of preferred transitions over all nodes in the graph, Let m θ = v∈V |N (v)| be the cardinality of Θ, and m g = |Ω g | the number of possible goals.
A priori, the number of Bayesian updates required to update the belief at every iteration should be m θ × m g . Now, let us assume the conditional independence relationships described by the new problem diagram in fig. . More specifically, we introduce the assumption that conditioned on a robot location s t , the goal g, and the preference for the corresponding vertex p v in the graph, the observation o t and the preference for any other vertex are conditionally independent.
In other words, the observations the human provides can be defined conditioned only on the robot location, the goal, and the human's preference for its current vertex p v . By introducing this assumption, each update step only requires updating the joint (p v , g), reducing the number of cost computations to |N (v)| × m g .
We can notice that by introducing this assumption, we removed the direct relationship between the number of polytopes in the environment and the complexity of the Bayesian update in eq. ( ). In practice, components of θ are not mutually independent. For example, if the human preference at a vertex v 1 is
, it is unlikely that the human will also prefer p v2 = (v 2 , v 1 ) (turning back). We can improve our model by assuming a dependent relationship between preferences for adjacent edges, which does not significantly increase the complexity of the inference problem. An interesting property of our encoding is that any two paths that belong to different homotopy classes will cross different sequences of polytopes, i.e. they correspond to a different sequence of edges on G.
This can be proved by contradiction. Let us suppose that two continuous trajectories ξ 1 and ξ 2 , with the same start and end points and that do not intersect any obstacle, traverse the same regions in G in the same order. From the construction of the hyperplane arrangement, each polytope that the paths traverse through is obstacle-free.
Therefore, within each polytope, there is no obstacle in the area located in between the portions of ξ 1 and ξ 2 that belong to the region. A smooth transformation of ξ 1 into ξ 2 can be obtained by transforming each portion of ξ 1 belonging to the polytopes it intersects into the corresponding portion of ξ 2 for the same polytopes, where the extremities of the trajectory portions are connected to one another along the polytope's edges (where the same edge is crossed by both paths).
Along this transformation, the paths do not intersect any obstacle, and therefore ξ 1 and ξ 2 belong to the same homotopy class.

EXPERIMENTS

We evaluate our model on a simulated navigation task where the robot must reach a goal that is unknown a priori while respecting the path preferences indicated by a human. The robot navigates in a grid world containing obstacles. The transition model is deterministic: the robot selects an adjacent location on the grid to reach at the next time step.
The robot is also allowed to take diagonal actions. Each location s t in the map can be mapped to a vertex v t ∈ G. Therefore, the actions leading to locations mapped to different vertices correspond to edges on the graph. We note f (s t , a t ) the edge crossed by taking action a t from location s t .
The robot is given a mission time limit T max for reaching the goal. In this problem, we assume that the human selects actions to noisily minimize a cost function C g,θ , where θ is defined as per eq. ( ), corresponding to the length of the shortest path to the goal constrained by the preference (where the robot is only allowed to make transitions on G along preferred edges).
More specifically, where δ(s t , g | o t , p vt ) designates the length of the shortest path from s t to g passing by o t and constrained by preference p vt . This is a slight variant of the cost function proposed by Best and Fitch , where we add in a conditioning on the path preference. We compute costs by running the A path planning algorithm on the environment maps (grid worlds with diagonal actions) and impose preference constraints by pruning invalid transitions from the search tree.
Reward model. At each step in time, the robot receives a reward which is a sum of three components: a goal-specific reward a preference-specific reward or penalty We compute solutions to the POMDP defined in section III-B with the online solver POMCP , and with the particularity that within the rollouts, the robot does not expect to collect human inputs.
Each time a solution is computed, the robot takes an action and may receive an observation. If it does, it updates its belief distribution over the unknown problem variables and resolves the POMDP over a receding horizon.

Baselines

• Goal only. The robot solves the POMDP while ignoring the effects of path preference. Similarly to , we assume the human is taking action to minimize a goaldependent cost C g (s t , o t ) = δ(s t , g | o t ), where the conditioning on the preference is removed. We also omit the path preference's contribution to the reward R pref .
• Compliant. The robot complies with the human input, but does not take an initiative. If the user stops providing information, the robot continues in the last direction indicated for 5 time steps (conserving its momentum), then stops. • Blended. We designed an arbitration function to decide between our proposed policy (accounting for path preferences) and the user's recommendation when the robot receives inputs.
Our metric to evaluate confidence in the robot's prediction for the purpose of arbitration is the entropy of the intention distribution H(g, p i ), where p i denotes the preferred neighbor for the current region. Because our representation of the world is discrete, the arbitration is given by a step function.
Denoted by U , the action corresponding to the human's input, and P , the robot's prediction for the optimal action, we write the policy where we chose h = 1.6 as the confidence threshold.

Results

When evaluating the algorithm, we consider that a run is successful if the robot reached the goal within its allocated mission time T max and only made transitions between graph vertices corresponding to the human's preferences. We vary the time delay between human inputs, from constant guidance (∆ T = 1) to only a single observation (∆ T ≥ T max ).
Success rates. Table I reports the success rates for experiments conducted over six randomly sampled problem instances and 50 runs per instance in Map 1 (fig. ). When the human provides inputs at every iteration, the compliant policy shows the highest success rates. However, as ∆ T increases, the compliant robot is not able to accomplish the task within the allotted time as it does not receive sufficient inputs to do so, and performance decreases compared to the autonomous baselines.
We find that in these runs, accounting for path preference consistently improves performance compared with the goal-only baseline. Results also show that blending the user's input with the robot's policy (Path Preference + Blend) when the human provides information leads to improved performance. Belief entropy.
Figure shows a challenging problem instance where the directions the human provides do not align directly with the shortest path to the goal. By ignoring the effects of preferences in the problem model (goal only), the robot quickly infers from observations that the upper left goal is less likely than others (P (g) drops).
The strong decrease in entropy shows that the robot becomes overconfident in this prediction. Overconfidence in an incorrect goal will prevent the agent from finding the correct goal once the human's indications directly align with it, as it needs to correct for the wrong predictions, as shown in the path realization (fig.
). In this realization, the goal-only method (green robot) fails to search the upper left area within the allotted time. By accounting for path preferences in its model, the blue robot's entropy over the goal distribution decreases more steadily, allowing for it to leverage the human's latest observations and reach the goal successfully.
shows an over-confident prediction (shown by the strong reduction in belief entropy) that the correct goal is less likely, making it more difficult to reach the correct goal compared to a method that accounts for path preference. Computation time. In table II we provide the time required to solve the POMDP, and the time required to update the robot's belief as it receives new observations.
We compute solutions on three maps: a simple 10 × 10 grid world with 8 polytopes (fig. ), a 10 × 10 grid world with 56 polytopes (fig. ), and a 20×20 grid world with 73 polytopes (fig. ). The latter environment being larger, we increase the mission time and the depth of the search tree in POMCP from T max = 30 (Map 1 and Map 2) to T max = 60 (Map 3).
We do not notice an increase in the time required to update the robot's belief with an increase in problem complexity, which is consistent with our observation that the complexity of the Bayesian update should not increase with the number of obstacles or polytopes. On the contrary, the belief update time on Map 2 and Map 3, containing more obstacles, is reduced compared to the first map.
More obstacles result in fewer iterations when solving the constrained shortest path problem with A . Adding constraints due to the obstacles and polytopes reduces the size of the A search tree. C. Limitations Simulation environments. In our simulations, we hardcoded the preference policy over the maps (e.g. in Map 1, go around the table counter-clockwise).
We randomly sampled problem instances (start and goal locations, and goal options) to reduce the bias introduced by these preference choices. To best evaluate and compare the different approaches, it would be best to sample preferences among a distribution of preferences chosen by a human (for example, from benchmarks resulting from a collection of data).
Creating such a benchmark is an interesting direction for future work. Hyperplane arrangement construction. The main limitation of our approach is that the size and geometry of each polytope depends strongly on the geometry of the obstacles, as seen in fig. . Because of this, the robot can make predictions over preferences that are too refined compared with the topology of the environment.
A direct consequence is that when the size of the polytopes is small, the information provided by the human can be incorrectly interpreted as a preference on the robot's immediate action. Our method can be improved by changing the structure of the hyperplane arrangement so that it relies on the topology of the environment, but does not vary strongly with the geometry of the features in the environment.
For this purpose, topometric maps and region construction algorithms are promising directions. We presented an approach for encoding and inferring a human's path preference in an environment with obstacles. By leveraging a partitioning of the space into polytopes and a stochastic observation model, our method allows for joint inference over the goal and path preference even when both are unknown a-priori.
Our experiments on an unknown-goal navigation problem with sparse human interventions demonstrate the effectiveness of our approach and its suitability for online applications. The time required to update the robot's belief does not increase with the complexity of the environment, which further highlights the practicality of our method.